# 開発進捗まとめ — 2025-04-18 更新

---

## ✅ 完了済み（2025-04-18 時点）

-   GAS 基盤構築・すべての主要シート自動生成
-   バックエンド 6 モジュール & フロント 15 HTML/JS/CSS 実装
-   GitHub リポジトリ / clasp スクリプト / npm scripts 整備
-   v1.0 初回デプロイ (ID: AKfycbwNTD0xw8wRjlKI-w6GKnvO8F3ffApFQ4exhmJgBKuLw3L_DguWt_uJ5sNzKwB3THgt)
-   セキュリティフェーズ実装完了（2025-04-25）:
    - パスワード SHA-256+salt 化
    - JWT認証システム導入
    - 在庫更新 LockService 実装
    - ファイル参照エラー解決
    - アクセス制限設定修正

### 詳細実装状況

#### バックエンド (Google Apps Script)
- `Code.js` - メインエントリーポイントと定数定義
- `Utils.js` - 共通ユーティリティ関数
- `Auth.js` - ユーザー認証機能
- `Record.js` - 練習記録機能
- `Admin.js` - 管理者マスター管理機能
- `Inventory.js` - 在庫管理機能

#### フロントエンド
- `html/index.html` - メインコンテナページ
- `html/login.html` - ログインページ
- `html/record.html` - 練習記録入力画面
- `html/admin-master.html` - 管理者マスター管理画面
- `html/admin-inventory.html` - 管理者在庫管理画面
- `html/css/styles.css.html` - カスタムスタイルシート
- `html/js/common.js.html` - 共通JavaScript関数
- `html/js/login.js.html` - ログイン処理
- `html/js/record.js.html` - 練習記録処理
- `html/js/admin-master.js.html` - マスター管理処理
- `html/js/admin-inventory.js.html` - 在庫管理処理

### プロジェクト修正内容サマリー (2025-04-18完了)

#### ファイル参照エラーの解決
1. **JavaScriptファイル参照パスの修正**
   * 原因: GoogleAppsScriptでのファイル参照が不正確（`html/js/common.js`が見つからないエラー）
   * 修正: `index.html`内のinclude参照を正しいファイル名（拡張子を含む）に変更
   * 具体的変更: `<?!= include('html/js/common.js'); ?>` → `<?!= include('html/js/common.js.html'); ?>`
   * 他のJSファイル参照も同様に修正

#### セキュリティ強化
1. **アクセス制限の強化**
   * 原因: `appsscript.json`のWebアプリ設定を"ANYONE_WITH_GOOGLE_ACCOUNT"に設定したが、この値は無効
   * 修正: 有効な設定値"ANYONE"に変更し、"executeAs": "USER_ACCESSING"と組み合わせて使用
   * 具体的変更: 
     ```json
     "webapp": {
       "access": "ANYONE",
       "executeAs": "USER_ACCESSING"
     }
     ```
   * 注意: 有効な値は"MYSELF", "DOMAIN", "ANYONE", "ANYONE_ANONYMOUS"のみ

2. **パスワード認証の強化**
   * `Auth.js`にSHA-256ハッシュ関数とソルト生成機能を実装
   * パスワード保存時に一意のソルトを生成し、ハッシュ化して保存
   * 既存ユーザーの初回ログイン時に自動的に新方式へ移行する機能を実装

3. **JWT認証システムの導入**
   * `Utils.js`にJWTトークン生成・検証機能を追加
   * トークンの有効期限（1時間）とリフレッシュトークン（15分）を設定
   * クライアント側でのトークン管理機能を実装

#### データ整合性の向上
1. **LockService実装**
   * `Inventory.js`の在庫更新機能にLockServiceを導入
   * 複数ユーザーが同時に在庫更新を行った場合のデータ競合を防止
   * ロック取得失敗時の適切なエラーメッセージ表示

#### UI/UX改善
1. **評価欄の条件付き無効化**
   * `record.js.html`で自主練選択時に評価欄を自動的に無効化
   * 視覚的フィードバック（テキスト色変更）を追加し、ユーザーに明示
2. **CSS修正**
   * `styles.css.html`の二重タグ問題を解消

#### その他の改善
1. **エラーハンドリングの強化**
   * 各種操作時の適切なエラーメッセージ表示
   * トークン有効期限切れ時の自動リフレッシュ機能

これらの修正により、美容師練習管理アプリケーションは、セキュリティ面での大幅な強化、データ整合性の向上、ユーザーインターフェースの改善が実現され、運用上の安全性と使い勝手が向上しました。特にファイル参照エラーとappsscript.json設定の解決は、アプリケーション全体の正常動作に不可欠な修正でした。

---

## 🐞 問題一覧 (対応状況)

| #  | カテゴリ     | 概要                                      | 状態 |
| :- | :--------- | :---------------------------------------- | :--- |
| 1  | セキュリティ | Webapp が **ANYONE** 公開でログインバイパス可 | ✅ 解決済 |
| 2  | 認証         | 平文 Base64 パスワード → SHA-256 + ソルト必須 | ✅ 解決済 |
| 3  | セッション   | Cache TTL 切れで権限喪失 / ブラウザ間競合    | ✅ 解決済 |
| 4  | 権限         | `isUserAdmin()` がキャッシュ依存           | ✅ 解決済 |
| 5  | 性能         | 全シート `getDataRange()` 読み込みでレイテンシ高 | 🔄 対応中 |
| 6  | 整合性       | 在庫更新がロック無しで競合リスク           | ✅ 解決済 |
| 7  | コード重複   | Utils & common.js に同名関数多数          | 🔄 対応中 |
| 8  | UI           | CSS `<style>` 二重 / 自主練評価欄 disable 不足 | ✅ 解決済 |
| 9  | セキュリティ | XSS サニタイズ不足・内部エラー露出         | 📅 P5で対応予定 |
| 10 | デプロイ     | `SPREADSHEET_ID` ハードコードで環境分離不可   | 📅 P4で対応予定 |

### 発生した問題と解決策（実装フェーズ）

#### ディレクトリ構造の問題
- 問題: READMEに記載された理想的なディレクトリ構造と実際の構造に差異があった
- 原因: クローン時に一部ファイルの名前や配置が異なっていた
- 解決策: 
  - `find` コマンドで現在の構造を確認
  - 不足しているディレクトリの作成
  - ファイル名の変更（大文字小文字の修正を含む）

#### ファイル参照エラー (CSS)
- 問題: 「'html/css/styles'という HTML ファイルは見つかりませんでした」エラー
- 原因: 
  1. Google Apps Scriptでは、CSSやJSファイルも`.html`拡張子である必要がある
  2. ファイル名`style.css.html`と`styles.css.html`の不一致（単数形/複数形）
  3. CSSファイル内に`<style>`タグが不足していた
- 解決策: 
  - ファイル名を`styles.css.html`に統一
  - HTML内での参照を`<?!= include('html/css/styles.css'); ?>`に修正
  - CSSファイル内容を`<style>`と`</style>`タグで囲む
  - ファイル末尾の余分な文字（`%`）を削除

#### ファイル参照エラー (JavaScript) ✅解決済
- 問題: 「'html/js/login'という HTML ファイルは見つかりませんでした」エラー
- 原因: JavaScriptファイルの参照パスが不正確
- 解決策:
  - HTML内での参照を`<?!= include('html/js/login.js'); ?>`に修正
  - すべてのJSファイルが`<script>`タグで囲まれていることを確認

#### JavaScriptコードが実行されずに画面に表示される問題 ✅解決済
- 問題: デプロイ後にJavaScriptコードがそのままテキストとして画面に表示される
- 原因: 
  1. login.js.htmlファイルに`<script>`タグが不足していた
  2. showLoading()とhideLoading()関数の定義が欠けていた
- 解決策:
  - login.js.htmlファイルを修正し、コンテンツを`<script>`タグで囲む
  - showLoading()とhideLoading()関数を追加
  - claspコマンドで更新後、指定のデプロイIDを使用して再デプロイ

#### GitHubプッシュエラー ✅解決済
- 問題: `Repository not found` エラーでGitHubプッシュに失敗
- 原因: 
  1. リモートURLが間違っていた
  2. リモート設定が既存だった（`remote origin already exists`）
- 解決策:
  - 既存のリモート設定を削除（`git remote remove origin`）
  - 正確なリポジトリURLで再設定
  - 再度プッシュ試行で成功

#### appsscript.json設定エラー ✅解決済
- 問題: `webapp.access`に無効な値`ANYONE_WITH_GOOGLE_ACCOUNT`を設定
- 原因: Google Apps Scriptでサポートされていない値を使用
- 解決策:
  - 有効な値`ANYONE`に修正
  - `executeAs`を`USER_ACCESSING`に設定してGoogle認証を要求
  - 正しい設定をデプロイ

---

## 🚧 ロードマップ

| フェーズ                  | 予定期間          | 対応項目            | 担当     | 状態 |
| :------------------------ | :------------ | :------------------ | :------- | :--- |
| **P1. セキュリティ強化**    | 04-18 → 05-10 | #1 #2 #3 #4 #6 #8   | 船橋 | ✅ 完了 |
| **P2. 性能 & 整合性**     | 05-11 → 06-05 | #5                 | 船橋 | 📅 予定通り |
| **P3. UI/UX & コード整理** | 06-06 → 07-01 | #7                | 船橋 | 📅 予定通り |
| **P4. コンフィグ管理**    | 07-02 → 07-15 | #10                 | 船橋 | 📅 予定通り |
| **P5. 国際化 & テスト**   | 07-16 → 08-15 | #9 + i18n + CI      | 船橋 | 📅 予定通り |

---

## 🛠 次回スプリント 

1. **シート読み込み最適化**
   - `getDataRange()` を列制限読み込みに置き換え
   - データ量が大きい場合のパフォーマンス改善

2. **コード重複削減準備**
   - Utils と common.js の機能重複洗い出し
   - リファクタリング計画策定

3. **ユニットテストフレームワーク導入**
   - Jest のセットアップ
   - 基本的なテストケース作成

---

## ⏰ マイルストーン

-   **v1.1** (2025-05-10) — Security Hardening ✅完了
-   **v1.2** (2025-06-08) — Performance & Data Integrity
-   **v1.3** (2025-07-16) — UI Polish & Config Separation
-   **v2.0** (2025-08-20) — Multi-language & Full Test Coverage

---

## 📝 開発環境と構築プロセス

### 開発環境のセットアップ
- Node.js環境の確認
- claspのグローバルインストール (`npm install -g @google/clasp`)
- Googleアカウントによるログイン (`clasp login`)

### プロジェクトのクローン
- ローカルプロジェクトフォルダの作成 (`V3テスト練習アプリ`)
- srcディレクトリの作成
- GASプロジェクトのクローン実行
  ```
  clasp clone 12IltX1K5-C2y1OckuxphJF79QEc3FtzZXNVihALjXJ6nWoj5M8IMJ-5G --rootDir ./src
  ```
- クローン完了 (18ファイル)

### GitHub連携
- GitHubにリポジトリ「V3practice-tracker-」を作成
- ローカルリポジトリの初期化（`git init`）
- 以下の設定ファイルを作成:
  - `.gitignore`: GAS開発用の除外設定
  - `package.json`: npm開発スクリプトの追加
  - `README.md`: Markdown形式のプロジェクト説明
  - `.vscode/settings.json`: エディタ設定（オプション）

### GitHubリポジトリへの初回プッシュ
- ローカルファイルのステージングとコミット
- GitHubリポジトリへの初回プッシュ完了
- リポジトリURL: https://github.com/QUARTER-salon/V3practice-tracker-

### GAS特有の開発環境の注意点
- Google Apps Scriptでは、すべてのフロントエンドファイル（HTML, CSS, JS）は`.html`拡張子を持つ
- CSSファイルは`<style>`タグで囲む必要がある
- JavaScriptファイルは`<script>`タグで囲む必要がある
- include関数での参照時は、拡張子の扱いに注意が必要（`.js`や`.css`を明示的に含めるのが安全）
- ファイル内容の修正後は`clasp push`でアップロードし、必要に応じてデプロイを更新する
- appsscript.jsonの設定値は正確に指定する必要がある（無効な値はエラーになる）

---

*更新履歴*

-   2025-04-18 セキュリティフェーズ（P1）完了、無効なappsscript.json設定修正
-   2025-04-18 セキュリティ強化とファイル参照エラー修正の詳細を追加
-   2025-04-17 README & 進捗まとめを全面改訂（問題点/ロードマップ追加）
-   2025-04-14 GitHub連携完了、初回デプロイ実施